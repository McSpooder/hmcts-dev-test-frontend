{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/textarea/macro.njk" import govukTextarea %}
{% from "govuk/components/select/macro.njk" import govukSelect %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/error-summary/macro.njk" import govukErrorSummary %}

{% extends "../template.njk" %}

{% block pageTitle %}Create New Task - HMCTS Task Management{% endblock %}

{% block content %}
  <div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
      <h1 class="govuk-heading-xl">Create New Task</h1>
      
      {% if error %}
        {{ govukErrorSummary({
          titleText: "There was a problem",
          errorList: [
            {
              text: error
            }
          ]
        }) }}
      {% endif %}
      
      <form action="/tasks" method="POST">
        {{ govukInput({
          label: {
            text: "Title",
            classes: "govuk-label--m"
          },
          id: "title",
          name: "title",
          value: formData.title if formData else '',
          required: true
        }) }}
        
        {{ govukTextarea({
          label: {
            text: "Description (optional)",
            classes: "govuk-label--m"
          },
          id: "description",
          name: "description",
          value: formData.description if formData else '',
          rows: 5
        }) }}
        
        {{ govukSelect({
          label: {
            text: "Status",
            classes: "govuk-label--m"
          },
          id: "status",
          name: "status",
          items: [
            {
              value: "PENDING",
              text: "Pending",
              selected: true if not formData or formData.status === 'PENDING'
            },
            {
              value: "IN_PROGRESS",
              text: "In Progress",
              selected: true if formData and formData.status === 'IN_PROGRESS'
            },
            {
              value: "DONE",
              text: "Done",
              selected: true if formData and formData.status === 'DONE'
            },
            {
              value: "CANCELED",
              text: "Canceled",
              selected: true if formData and formData.status === 'CANCELED'
            }
          ]
        }) }}
        
        <div class="govuk-form-group">
          <label class="govuk-label govuk-label--m" for="dueDate">
            Due Date and Time
          </label>
          <input class="govuk-input" id="dueDate" name="dueDate" type="datetime-local" required value="{{ formData.dueDate if formData else '' }}">
        </div>
        
        {{ govukButton({
          text: "Create Task"
        }) }}
        
        <a href="/tasks" class="govuk-button govuk-button--secondary">Cancel</a>
      </form>
    </div>
  </div>
{% endblock %}